name: Checking the build

on:
  push:
    tags-ignore:
      - '[0-9]+.[0-9]+.[0-9]+-dev.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CORE_PACKAGE_DIR: "./packages/mapray"
      UI_PACKAGE_DIR: "./packages/ui"
      DEPLOY_DIR: "./_deploy"
      CORE_DEPLOY_DIR: "./_deploy/public/mapray-js"
      UI_DEPLOY_DIR: "./_deploy/public/ui"
      EMSDK_DIR: "./_deploy/emsdk"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup EMSDK
        run: |
          mkdir -p ${{ env.EMSDK_DIR }}/../
          echo "Cloning EMSDK from github"
          git clone --branch=2.0.9 --depth=1 https://github.com/emscripten-core/emsdk.git ${{ env.EMSDK_DIR }}
          echo "Coping patch file to the EMSDK directory"
          cp ${{ env.CORE_PACKAGE_DIR }}/wasm/emsdk.patch ${{ env.EMSDK_DIR }}/emsdk.patch
          echo "Install and Activate EMSDK"
          cd ${{ env.EMSDK_DIR }}
          ./emsdk install latest
          ./emsdk activate latest
          echo "Apply the patch to EMSDK"
          git apply -p1 emsdk.patch
      - run:  git fetch --prune --unshallow
      - name: Setting yarn
        run: |
          yarn config set version-tag-prefix ""
          yarn config set version-sign-git-tag false
          yarn config set version-git-tag false
      - name: Increment core patch version to next version
        run: yarn version --patch
        working-directory:  ${{ env.CORE_PACKAGE_DIR }}
      - name: Increment ui patch version to next version
        run: yarn version --patch
        working-directory:  ${{ env.UI_PACKAGE_DIR }}
      - name: Get deploy version
        run: |
          NEXT_VERSION=`node -pe "require('./package.json').version"`
          echo ${NEXT_VERSION}
          echo "::set-output name=next_version::${NEXT_VERSION}"
        id: get_version
        shell: bash
        working-directory: ${{ env.CORE_PACKAGE_DIR }}
      - name: Build wasm code
        run: |
          echo "Activate EMSDK"
          source ${{ env.EMSDK_DIR }}/emsdk_env.sh
          echo "Build wasm code"
          cd ${{ env.CORE_PACKAGE_DIR }}
          ./wasm/rebuild_and_install.sh
        shell: bash
      - name: Setup
        run: yarn install
      - name: Build maprayJS
        run: yarn build
